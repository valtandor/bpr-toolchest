#!/bin/bash

function exit_with_error() {
	echo "$1" >&2
	exit 2
}

EASYCONFIGS_DIR=/home/brob695/code/easybuild-easyconfigs
EASYBLOCKS_DIR=/home/brob695/code/easybuild-easyblocks
FRAMEWORK_DIR=/home/brob695/code/easybuild-framework
PRIVATEKEY=/home/brob695/.ssh/github_rsa

cwd=$(pwd -P)
exitcode=0

# Add an SSH key to ssh-agent if possible and required.
is_registered=$(ssh-add -l | grep ${PRIVATEKEY})
if [[ -z "${is_registered}" ]]
then
	ssh-add ${PRIVATEKEY} || exit_with_error "Cannot register SSH identity with ssh-agent"
fi

serverbranch="develop"

for localrepo in ${EASYCONFIGS_DIR} ${EASYBLOCKS_DIR} ${FRAMEWORK_DIR}
do
	echo "Updating local repository in ${localrepo}"
	cd ${localrepo}

	if [[ ! -d ".git" ]]
	then
		echo "Warning: ${localrepo}: not a git repository. Skipping."
		exitcode=1
		continue
	fi

	git fetch --prune --all
	allremotebranches=$(git branch -r | awk '{print $1}')
	current_branch=$(git branch | grep "^*" | sed -e 's/^*\s\+//')

	git checkout "${serverbranch}"
	if [ $? -ne 0 ]
	then
		echo "Warning: ${localrepo}: cannot switch to \"${serverbranch}\" branch. Skipping."
		exitcode=1
		continue
	fi
	git pull
	if [ $? -ne 0 ]
	then
		echo "Warning: ${localrepo}: cannot update \"${serverbranch}\" branch from remote. Skipping."
		exitcode=1
		continue
	fi

	for branch in $(git branch | sed -e 's/^\**\s*//')
	do
		if [[ "${branch}" == "${serverbranch}" ]]
		then
			continue
		fi

		remote_branch=$(git branch -vv | sed -e 's/^\**\s*//' | grep "^${branch}" | awk '{print $3}' | grep "^\[.*[]:]$" | sed -e 's/^\[\([^]:]*\)[]:]$/\1/')
		if [[ -z "${remote_branch}" ]]
		then
			echo "Warning: local branch \"${branch}\" is not tracking a remote branch. Skipping."
			exitcode=1
			continue
		fi
		remote_exists=false
		for rb in ${allremotebranches}
		do
			if [[ "${remote_branch}" == "${rb}" ]]
			then
				remote_exists=true
			fi
		done
		if [[ "${remote_exists}" == false ]]
		then
			echo "Warning: remote branch \"${remote_branch}\", tracked by local branch \"${branch}\", does not exist. Skipping."
			exitcode=1
			continue
		fi

		remote=$(echo ${remote_branch} | sed -e 's,/.*$,,')
		actual_remote_branch=$(echo ${remote_branch} | sed -e 's,^.*/,,')

		git checkout "${branch}"
		if [ $? -ne 0 ]
		then
			echo "Warning: ${localrepo}: cannot switch to \"${branch}\" branch. Skipping."
			exitcode=1
			continue
		fi

		if [[ "${branch}" == "production"  || "${branch}" == "master" ]]
		then
			git pull
			continue
		fi

		git merge "${serverbranch}"
		if [ $? -ne 0 ]
		then
			echo "Warning: could not merge from \"${serverbranch}\" into \"${branch}\". Skipping."
			exitcode=1
			continue
		fi

		branch_status=$(git status | tail -n 1)
		echo "${branch}: ${branch_status}"
		if [[ ! "${branch_status}" =~ "nothing to commit" ]]
		then
			echo "Warning: local branch \"${branch}\" has uncommitted changes. Skipping."
			exitcode=1
			continue
		fi

		git push ${remote} ${actual_remote_branch}

		git diff --exit-code "${branch}" "${serverbranch}"
		if [ $? -eq 0 ]
		then
			echo "Warning: \"${branch}\" has the same contents as \"${serverbranch}\". Consider deleting?"
			exitcode=1
		fi
	done

	git checkout ${current_branch}
done

cd ${cwd}

if [[ "${exitcode}" -gt 0 ]]
then
	echo "There were some warnings. Please review the output." >&2
fi
exit ${exitcode}
